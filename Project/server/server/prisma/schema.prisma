generator client { provider = "prisma-client-js" }
datasource db { provider = "sqlite"; url = "file:./dev.db" }

model User {
  id               Int       @id @default(autoincrement())
  email            String    @unique
  passwordHash     String
  fullName         String?
  role             Role      @default(USER)
  emailVerifiedAt  DateTime?
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt

  verifications    EmailVerification[]
  resets           PasswordReset[]
  twofaCodes       TwoFactorCode[]
}

model EmailVerification {
  id         Int      @id @default(autoincrement())
  token      String   @unique
  expiresAt  DateTime
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     Int
  createdAt  DateTime @default(now())
}

model PasswordReset {
  id         Int      @id @default(autoincrement())
  token      String   @unique
  expiresAt  DateTime
  used       Boolean  @default(false)
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     Int
  createdAt  DateTime @default(now())
}

model TwoFactorCode {
  id         Int      @id @default(autoincrement())
  code       String
  purpose    String   @default("login")
  expiresAt  DateTime
  attempts   Int      @default(0)
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     Int
  createdAt  DateTime @default(now())
  @@index([userId, expiresAt])
}

enum Role {
  USER
  ADMIN
}
